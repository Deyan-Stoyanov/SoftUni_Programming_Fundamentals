using System;
using System.Collections.Generic;
using System.Globalization;
using System.Numerics;
using System.Text;

namespace ConsoleApp1
{
    class Program
    {
        static void Main(string[] args)
        {
            double x1 = double.Parse(Console.ReadLine());
            double y1 = double.Parse(Console.ReadLine());
            double x2 = double.Parse(Console.ReadLine());
            double y2 = double.Parse(Console.ReadLine());
            double x3 = double.Parse(Console.ReadLine());
            double y3 = double.Parse(Console.ReadLine());
            double x4 = double.Parse(Console.ReadLine());
            double y4 = double.Parse(Console.ReadLine());
            Console.WriteLine(LongerLine(x1, y1, x2, y2, x3, y3, x4, y4));
        }
        static string LongerLine(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4)
        {
            string line;
            double lengthOfFIrstLine = Math.Sqrt(Math.Pow(Math.Abs(x1 - x2), 2) + Math.Pow(Math.Abs(y1 - y2), 2));
            double lengthOfSecLine = Math.Sqrt(Math.Pow(Math.Abs(x3 - x4), 2) + Math.Pow(Math.Abs(y3 - y4), 2));
            if (lengthOfFIrstLine >= lengthOfSecLine)
            {
                line = $"({ClosestPoint(x1, y1, x2, y2)})({FurthestPoint(x1, y1, x2, y2)})";
            }
            else
            {
                line = $"({ClosestPoint(x3, y3, x4, y4)})({FurthestPoint(x3, y3, x4, y4)})";
            }
            return line;
        }
        static string ClosestPoint(double x1, double y1, double x2, double y2)
        {
            string closestPair;
            
            double sum1 = Math.Abs(x1) + Math.Abs(y1);
            double sum2 = Math.Abs(x2) + Math.Abs(y2);
            if (sum1 <= sum2)
            {
                closestPair = $"{x1}, {y1}";
            }
            else
            {
                closestPair = $"{x2}, {y2}";
            }
            return closestPair;
        }
        static string FurthestPoint(double x1, double y1, double x2, double y2)
        {
            
            string furthestPair;
            double sum1 = Math.Abs(x1) + Math.Abs(y1);
            double sum2 = Math.Abs(x2) + Math.Abs(y2);
            if (sum1 > sum2)
            {
                furthestPair = $"{x1}, {y1}";
            }
            else
            {
                furthestPair = $"{x2}, {y2}";
            }
            return furthestPair;
        }
    }
}